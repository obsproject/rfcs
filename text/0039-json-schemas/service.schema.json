{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "OBS Common Service Object Schema",
    "description": "Common structure shared among OBS first-party service plugins",
    "type": "object",
    "required": ["servers"],
    "properties": {
        "more_info_link": {
            "description": "Link to a web page that show more info about the streaming service",
            "type": "string",
            "format": "uri",
            "$comment": "Add a restriction to the URI format",
            "$ref": "commonPattern.schema.json#/$defs/linkPattern"
        },
        "stream_key_link": {
            "description": "Link to a web page that allow the user to obtain streaming service stream key",
            "type": "string",
            "format": "uri",
            "$comment": "Add a restriction to the URI format",
            "$ref": "commonPattern.schema.json#/$defs/linkPattern"
        },
        "servers": {
            "description": "Array of server objects",
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "required": ["name","url"],
                "properties": {
                    "name": {
                        "title": "Server given name",
                        "type": "string"
                    },
                    "protocol": {
                        "description": "Protocol used by the server. Required if the prefix can't help identify the streaming protocol (e.g. HLS).",
                        "type": "string",
                        "$ref": "protocolDefs.schema.json#/$defs/protocolEnum"
                    },
                    "url": {
                        "title": "Server URL",
                        "type": "string",
                        "format": "uri",
                        "$comment": "Add a restriction to the URI format based on protocols supported by OBS",
                        "$ref": "protocolDefs.schema.json#/$defs/serverPattern"
                    }
                },
                "additionalProperties": false,
                "$comment": "Making 'protocol' required if no unique prefix is found (e.g. HLS will require 'protocol')",
                "if": { "not": { "properties": { "url": { "$ref": "protocolDefs.schema.json#/$defs/requireProtocolPattern" } } } },
                "then": { "required": ["protocol"] }
            },
            "additionalItems": false
        },
        "supported_codecs": {
            "description": "Supported video and audio codecs by the service per protocol",
            "type": "object",
            "properties": {
                "video": { "$ref": "protocolCodecsMap.schema.json" },
                "audio": { "$ref": "protocolCodecsMap.schema.json" }
            },
            "additionalProperties": false
        },
        "supported_resolutions": {
            "title": "Resolutions supported by the service",
            "description": "All resolutions shall follow the same pattern between two possibility, with or without framerate. Check examples below.",
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "string",
                "pattern": "^[0-9]+x[0-9]+",
                "examples": [
                    "1920x1080",
                    "1280x720@60"
                ]
            },
            "additionalItems": false,
            "$comment": "Detect if resolutions contain a framerate, if true force every resolutions to have it and vice-versa",
            "if": { "items": { "$ref": "commonPattern.schema.json#/$defs/resolutionFrameratePattern" } },
            "then": { "items": { "$ref": "commonPattern.schema.json#/$defs/resolutionFrameratePattern" } },
            "else": { "items": { "$ref": "commonPattern.schema.json#/$defs/resolutionPattern" } }
        },
        "maximums": {
            "type": "object",
            "properties": {
                "video_bitrate_matrix": {
                    "description": "Video bitrate per resolution with framerate",
                    "type": "object",
                    "propertyNames": {
                        "$comment": "This object can only contain properties where the name that match the following pattern",
                        "$ref": "commonPattern.schema.json#/$defs/resolutionFrameratePattern"
                    },
                    "additionalProperties": {
                        "type": "object",
                        "propertyNames": { "$ref": "commonPattern.schema.json#/$defs/codecPattern" },
                        "additionalProperties": { "type": "integer" },
                        "unevaluatedProperties": false
                    },
                    "examples": [
                        {
                            "1280x720@60": {
                                "h264": 6000,
                                "av1": 5000
                            }
                        }
                    ],
                    "unevaluatedProperties": false
                }
            }
        },
        "recommended": { "type": "object" }
    },
    "allOf": [
        {
            "if": {
                "$comment": "Forbid 'video_bitrate_matrix' objects from being set if 'supported_resolutions' is not set with framerate",
                "properties": { "supported_resolutions": { "items": { "$ref": "commonPattern.schema.json#/$defs/resolutionPattern" } } }
            },
            "then": { "properties": {
                "maximums": { "not": { "required": ["video_bitrate_matrix"] } },
                "recommended": { "not": { "required": ["video_bitrate_matrix"] } }
            } },
            "else": {
                "$comment": "Otherwise forbid 'maximums/fps' from being set if 'supported_resolutions' is set with framerate",
                "properties": { "maximums": { "not": { "required": ["fps"] } } }
            }
        }
    ]
}